name: Deploy CloudFormation Template

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy CloudFormation Stack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS CLI
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: aws --version

      - name: Check if Stack Exists
        id: stack-check
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          aws cloudformation describe-stacks --stack-name dev-environment || echo "StackNotFound"
      
      - name: Create or Update Stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          if grep -q "StackNotFound" <<<"${{ steps.stack-check.outputs.result }}"; then
            echo "Stack does not exist. Creating new stack..."
            aws cloudformation create-stack \
              --stack-name dev-environment \
              --template-body file://infra/environments/dev/rds-postgres-stack.yaml \
              --parameters file://infra/environments/dev/parameters.json \
              --capabilities CAPABILITY_NAMED_IAM
          else
            echo "Stack exists. Updating stack..."
            aws cloudformation update-stack \
              --stack-name dev-environment \
              --template-body file://infra/environments/dev/rds-postgres-stack.yaml \
              --parameters file://infra/environments/dev/parameters.json \
              --capabilities CAPABILITY_NAMED_IAM
          fi